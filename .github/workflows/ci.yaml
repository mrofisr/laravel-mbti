name: Laravel Testing (PHP)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ testing ]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: mbti
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: admin
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_PASSWORD: rootpass
          MYSQL_ROOT_PASSWORD: rootpass
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Verify MySQL connection
        run: |
          mysql --version
          sudo apt-get install -y mysql-client
          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uadmin -prootpass -e "SHOW DATABASES"

      - name: Setup Database
        run: mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uadmin -prootpass mbti < mbti.sql

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}

      - name: Run composer install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
        env:
          APP_ENV: testing
      
      - name: Cache yarn dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}

      - name: Run yarn
        run: yarn && yarn dev

      - name: Prepare Laravel Application
        run: |
          php -r "file_exists('.env') || copy('.env.ci', '.env');"
          php artisan key:generate

      - name: Run PHPUnit tests
        env:
          MYSQL_DATABASE: mbti
          APP_ENV: testing
          DB_USERNAME: admin
          DB_PASSWORD: rootpass
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: ./vendor/bin/phpunit

      - name: Run test cases
        env:
          MYSQL_DATABASE: mbti
          APP_ENV: testing
          DB_USERNAME: admin
          DB_PASSWORD: rootpass
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: ./vendor/bin/codecept run acceptance --steps

      - name: Upload artifacts
        uses: actions/upload-artifact@master
        if: failure()
        with:
          name: Logs
          path: ./storage/logs